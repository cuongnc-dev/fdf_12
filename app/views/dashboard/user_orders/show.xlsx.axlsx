require 'axlsx'
xlsx_package = Axlsx::Package.new
wb = xlsx_package.workbook
wb.styles do |style|
  highlight_cell = style.add_style bg_color: "0033CC", b: true
  highlight_detail = style.add_style bg_color: "00BB00", b: true

  @order_products.each do |hash_orders|
    wb.add_worksheet(name: hash_orders.first) do |sheet|
      total = 0;
      sheet.add_row [nil, (l hash_orders.first.to_date, format: :long)]
      orders = hash_orders.last
      group_by_user(orders).each_with_index do |order_products, index|
        sheet.add_row []
        total += sum_price order_products.last
        sheet.add_row [increase_one(index), user_name_for_id(order_products.first),
          t("order_statistics.total_price") + format_price(sum_price(order_products.last)),
          nil, nil, nil , nil],
          style: [highlight_cell, highlight_cell, highlight_cell, highlight_cell,
            highlight_cell, highlight_cell, highlight_cell]
        sheet.add_row ["",t("dashboard.products.show.stt"), t("dashboard.products.show.name"),
          t("dashboard.products.show.quantity"), t("dashboard.products.show.notes"),
          t("dashboard.products.show.price"), t("dashboard.products.show.total")],
          style: [highlight_detail, highlight_detail, highlight_detail, highlight_detail,
            highlight_detail, highlight_detail, highlight_detail]
        order_products.last.each_with_index do |order, index|
          sheet.add_row ["",increase_one(index), order.product_name,
            order.quantity, order.notes, order.product_price,
            format_price(total_price(order.product_price, order.quantity))]
        end
      end
      sheet.add_row []
      sheet.add_row [nil, t("order_statistics.total_price") + format_price(total.to_s)]
    end
  end
end
